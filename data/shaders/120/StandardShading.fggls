#version 120

// Interpolated values from the vertex shaders
varying vec2 UV;
varying vec4 fragmentColor;
varying vec4 viewSpace;
varying vec4 fragmentFogColour;
varying vec3 fragmentFogParams;

// Values that stay constant for the whole mesh.
uniform sampler2D uTextureSampler2;

void main() {
    
    // Distance used by fog
    float dist = length(viewSpace);
    float fogStart = fragmentFogParams[0];
    float fogEnd = fragmentFogParams[1];
   
   float fogFactor = 0;
   // fogEnd range value greater than zero indicates that fog is turned on
   if(fogEnd > 0)
   {
        fogFactor = (fogStart - dist)/(fogStart - fogEnd);
        fogFactor = clamp( fogFactor, 0.0, 1.0 );
   }
    
	// Output color = color of the texture at the specified UV
    gl_FragColor = texture2D( uTextureSampler2, UV ) * fragmentColor;
    
    //Appy fog, if you inverse color in glsl mix function you have to
    //put 1.0 - fogFactor    
    float alpha = gl_FragColor[3];
    gl_FragColor = gl_FragColor * (1.0 - fogFactor) + fragmentFogColour * (fogFactor); 
    gl_FragColor[3] = alpha;
}
