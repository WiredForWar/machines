#version 120

// Input vertex data, different for all executions of this shader.
attribute vec4 vertexPosition_Billboard;
attribute vec2 vertexUV;
attribute vec4 vertexColor;

// Output data ; will be interpolated for each fragment.
varying vec2 UV;
varying vec4 fragmentColor;

uniform mat4 uVP; // Model-View-Projection matrix, but without the Model (the position is in BillboardPos; the orientation depends on the camera)

void main() {

	// Output position of the vertex, in clip space
	// UV of the vertex. No special space for this one.
    vec4 pos = vertexPosition_Billboard;
    pos[3] = 1.0;
    gl_Position =  uVP * pos;
    
	UV = vertexUV;
    fragmentColor = vec4(vertexColor[2],vertexColor[1],vertexColor[0],vertexColor[3]);
}

