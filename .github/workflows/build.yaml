name: Build

on:
  push:
  pull_request:

jobs:
  build-cmake:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
        - os: ubuntu-20.04
          build-type: Release
          tests: true

    steps:
    - uses: actions/checkout@v3
      with:
        lfs: false

    - name: Prepare the system (Linux)
      if: contains(matrix.os, 'ubuntu')
      run: |
        sudo scripts/prepare-system.sh

    - name: Prepare mingw (Linux)
      if: contains(matrix.toolchain, 'mingw')
      run: |
        sudo apt-get install -y mingw-w64

    - name: Configure
      shell: cmake -P {0}
      run: |
        set(toolchain "${{ matrix.toolchain }}")
        if(toolchain)
          set(cmake_toolchain_args "-DCMAKE_TOOLCHAIN_FILE=cmake/Toolchain-${toolchain}.cmake")
            if(toolchain MATCHES ".*32.*")
                list(APPEND cmake_toolchain_args "-DBUILD_32=1")
            endif()
        endif()
        if("${{ matrix.build-type }}" STREQUAL "Release" AND NOT "${{ matrix.tests }}" STREQUAL "true")
          set(cmake_release_args "-DDEV_BUILD=OFF")
        endif()

        file(TO_CMAKE_PATH "${{ github.workspace }}" WORKSPACE_DIR)

        execute_process(COMMAND ${CMAKE_COMMAND}
          -B ${WORKSPACE_DIR}/build
          -GNinja
          -DCMAKE_BUILD_TYPE=${{ matrix.build-type }}
          ${cmake_toolchain_args}
          ${cmake_release_args}
          RESULT_VARIABLE CONF_RESULT
        )

        if(CONF_RESULT)
            message(FATAL_ERROR "Configuration failed")
        endif()

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{ matrix.build-type }}

    - name: Test
      if: matrix.tests
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{ matrix.build-type }} --output-on-failure

    - name: Package
      working-directory: ${{github.workspace}}/build
      run: cpack -C ${{ matrix.build-type }}

    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
        path: ${{github.workspace}}/build/machines-*.zip
